{"version":3,"sources":["webpack:///./src/components/Wifi/index.js","webpack:///./src/pages/wifi.js","webpack:///./src/components/Layout/layout.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/@babel/runtime/regenerator/index.js","webpack:///./node_modules/regenerator-runtime/runtime-module.js","webpack:///./node_modules/@babel/runtime/helpers/asyncToGenerator.js"],"names":["Wifi","state","username","password","errorMessage","numRequests","componentDidMount","_this","setState","localStorage","getItem","onRequest","_callee","REQUEST_URL","res","creds","regenerator_default","a","wrap","_context","prev","next","alert","abrupt","fetch","sent","json","success","entry","setItem","message","stop","this","render","_this$state","react_default","createElement","styled","role","aria-label","Fragment","onClick","style","color","Component","WifiPage","layout","seo","title","keywords","Wifi_Wifi","Wrapper","div","withConfig","displayName","componentId","Layout","_ref","children","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","query","data","_header__WEBPACK_IMPORTED_MODULE_5__","siteTitle","site","siteMetadata","_SponsorsCarousel__WEBPACK_IMPORTED_MODULE_6__","_public_static_d_755544856_json__WEBPACK_IMPORTED_MODULE_0__","propTypes","PropTypes","node","isRequired","global","undefined","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","module","runtime","regeneratorRuntime","exports","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","call","Gp","GeneratorFunctionPrototype","Generator","create","GeneratorFunction","constructor","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","arg","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","self","tryLocsList","iter","then","result","done","value","toString","keys","object","key","push","reverse","length","pop","Context","reset","skipTempReset","_sent","delegate","method","tryEntries","forEach","resetTryEntry","charAt","isNaN","slice","rootRecord","completion","type","rval","dispatchException","exception","context","handle","loc","caught","record","i","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","Error","finallyEntry","complete","afterLoc","finish","catch","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","fn","obj","err","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","unwrapped","error","return","TypeError","info","pushTryEntry","locs","iteratorMethod","Function","__webpack_require__","g","hadRuntime","getOwnPropertyNames","indexOf","oldRuntime","e","asyncGeneratorStep","gen","_next","_throw","args","arguments","apply"],"mappings":"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","file":"component---src-pages-wifi-js-ef8a2090939e649f1661.js","sourcesContent":["import React, { Component } from 'react'\nimport { Wrapper, Emphasis } from '../../styled'\n\nexport default class Wifi extends Component {\n  state = {\n    username: '',\n    password: '',\n    errorMessage: '',\n    numRequests: 0,\n  }\n\n  componentDidMount = () => {\n    this.setState({\n      username: localStorage.getItem('wifi-username') || '',\n      password: localStorage.getItem('wifi-password') || '',\n      numRequests: localStorage.getItem('wifi-requests') || 0,\n    })\n  }\n\n  onRequest = async () => {\n    const REQUEST_URL =\n      'https://us-central1-wifi-service-2019.cloudfunctions.net/wifi'\n\n    if (this.state.numRequests > 5) {\n      alert(\n        \"You've requested too many wifi credentials. If you are having trouble please contact an organizer.\"\n      )\n      return\n    }\n\n    const res = await fetch(REQUEST_URL)\n    const creds = await res.json()\n\n    if (creds.success) {\n      this.setState({\n        username: creds.entry.username,\n        password: creds.entry.password,\n        numRequests: this.state.numRequests + 1,\n      })\n      localStorage.setItem('wifi-username', creds.entry.username)\n      localStorage.setItem('wifi-password', creds.entry.password)\n      localStorage.setItem('wifi-requests', this.state.numRequests)\n    } else {\n      this.setState({ errorMessage: creds.message, username: '', password: '' })\n    }\n  }\n\n  render() {\n    const { username, password, errorMessage } = this.state\n\n    return (\n      <div>\n        <Wrapper>\n          <p>\n            Hi there!{' '}\n            <span role=\"img\" aria-label=\"wave\">\n              👋\n            </span>\n          </p>\n          <p>\n            If you're on this page then you need directions on how to connect to\n            our wifi. Please follow the directions below.\n          </p>\n        </Wrapper>\n\n        <Wrapper>\n          <ol>\n            <li>\n              You will need to request a <Emphasis>username</Emphasis> and{' '}\n              <Emphasis>password</Emphasis>.\n              {username && (\n                <>\n                  <p>\n                    <strong>Username: </strong> <Emphasis>{username}</Emphasis>\n                  </p>\n                  <p>\n                    <strong>Password: </strong>\n                    <Emphasis>{password}</Emphasis>\n                  </p>\n                  <button onClick={this.onRequest}>\n                    Doesn't work? Request another!\n                  </button>\n                </>\n              )}\n              {!errorMessage && !username ? (\n                <div>\n                  <button onClick={this.onRequest}>Request</button>\n                </div>\n              ) : (\n                <p style={{ color: `red` }}>{errorMessage}</p>\n              )}\n            </li>\n            <li>\n              Connect to the network called <Emphasis>ucrwpa</Emphasis> using\n              the credentials above.\n            </li>\n            <li>\n              If you are having trouble, please get in touch with an organizer.\n            </li>\n          </ol>\n        </Wrapper>\n      </div>\n    )\n  }\n}\n","import React from 'react'\n\nimport Layout from '../components/Layout/layout'\nimport SEO from '../components/seo'\nimport { Header } from '../styled'\nimport Wifi from '../components/Wifi'\n\nconst WifiPage = () => (\n  <Layout>\n    <SEO title=\"Wifi\" keywords={[`event`, `live`, `portal`, `wifi`]} />\n    <Header>Wi-Fi Request</Header>\n    <Wifi />\n  </Layout>\n)\n\nexport default WifiPage\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport styled from 'styled-components'\n\nimport Header from '../header'\nimport SponsorCarousel from '../SponsorsCarousel'\nimport './layout.css'\n\nconst Wrapper = styled.div`\n  max-width: 960px;\n  margin: 0 auto 100px auto;\n`\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Wrapper>\n          <Header siteTitle={data.site.siteMetadata.title} />\n          <>{children}</>\n        </Wrapper>\n        <SponsorCarousel />\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() {\n    return this || (typeof self === \"object\" && self);\n  })() || Function(\"return this\")()\n);\n","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() {\n  return this || (typeof self === \"object\" && self);\n})() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;"],"sourceRoot":""}