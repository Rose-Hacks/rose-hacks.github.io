{"version":3,"sources":["webpack:///./src/pages/prizes.js","webpack:///./src/components/timer.js"],"names":["Prizes","title","Timer","props","state","days","hours","min","sec","componentDidMount","this","interval","setInterval","date","calculateCountdown","setState","stop","componentWillUnmount","endDate","diff","Date","parse","timeLeft","years","Math","floor","clearInterval","addLeadingZeros","value","String","length","render","countDown","className","style","textAlign","Component","defaultProps"],"mappings":"0FAAA,4DAeeA,UARA,kBACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKC,MAAM,sB,gECJbC,E,oBACF,WAAYC,GAAQ,IAAD,SACf,cAAMA,IAAN,MAEKC,MAAQ,CACTC,KAAM,EACNC,MAAO,EACPC,IAAK,EACLC,IAAK,GAPM,E,kHAWnBC,kBAAA,WAAqB,IAAD,OAEhBC,KAAKC,SAAWC,aAAY,WACxB,IAAMC,EAAO,EAAKC,mBAAmB,EAAKX,MAAMU,MAChDA,EAAO,EAAKE,SAASF,GAAQ,EAAKG,SACnC,M,EAGPC,qBAAA,WACIP,KAAKM,Q,EAGTF,mBAAA,SAAmBI,GACf,IAAIC,GAAQC,KAAKC,MAAM,IAAID,KAAKF,IAAYE,KAAKC,MAAM,IAAID,OAAW,IAGtE,GAAID,GAAQ,EAAG,OAAO,EAEtB,IAAMG,EAAW,CACbC,MAAO,EACPlB,KAAM,EACNC,MAAO,EACPC,IAAK,EACLC,IAAK,GAsBT,OAlBIW,GAAS,WACTG,EAASC,MAAQC,KAAKC,MAAMN,EAAI,UAChCA,GAAyB,OAAjBG,EAASC,MAAiB,OAElCJ,GAAQ,QACRG,EAASjB,KAAOmB,KAAKC,MAAMN,EAAO,OAClCA,GAAwB,MAAhBG,EAASjB,MAEjBc,GAAQ,OACRG,EAAShB,MAAQkB,KAAKC,MAAMN,EAAO,MACnCA,GAAyB,KAAjBG,EAAShB,OAEjBa,GAAQ,KACRG,EAASf,IAAMiB,KAAKC,MAAMN,EAAO,IACjCA,GAAuB,GAAfG,EAASf,KAErBe,EAASd,IAAMW,EAERG,G,EAGXN,KAAA,WACIU,cAAchB,KAAKC,W,EAGvBgB,gBAAA,SAAgBC,GAEZ,IADAA,EAAQC,OAAOD,GACRA,EAAME,OAAS,GAClBF,EAAQ,IAAMA,EAElB,OAAOA,G,EAGXG,OAAA,WACI,IAAMC,EAAYtB,KAAKN,MAEvB,OAEI,yBAAK6B,UAAW,aACZ,uBAAGC,MAAO,CAACC,UAAW,WAAtB,uBACR,0BAAMF,UAAW,iBACf,0BAAMA,UAAW,yBAEb,4BAAQA,UAAW,YAAavB,KAAKiB,gBAAgBK,EAAU3B,OAC/D,8BAA0B,IAAnB2B,EAAU3B,KAAa,MAAQ,UAIpC,0BAAM4B,UAAW,iBACvB,0BAAMA,UAAW,yBACf,gCAASvB,KAAKiB,gBAAgBK,EAAU1B,QACxC,yCAKI,0BAAM2B,UAAU,iBACtB,0BAAMA,UAAW,yBACf,gCAASvB,KAAKiB,gBAAgBK,EAAUzB,MACxC,uCAII,0BAAM0B,UAAW,iBACvB,0BAAMA,UAAU,yBACd,gCAASvB,KAAKiB,gBAAgBK,EAAUxB,MACxC,yC,GAzGQ4B,aAqHpBlC,EAAMmC,aAAe,CACjBxB,KAAM,IAAIO,MAGClB","file":"component---src-pages-prizes-js-15627c2df9e09450e989.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport NavBar from \"../components/navbar\"\nimport SEO from \"../components/seo\"\nimport Timer from '../components/timer'\n\nconst Prizes = () => (\n    <NavBar>\n        <SEO title=\"Rose Hack 2020\" />\n\n\n    </NavBar>\n)\n\nexport default Prizes\n","\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types'\n\nimport '../styles/timer.css'\nclass Timer extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            days: 0,\n            hours: 0,\n            min: 0,\n            sec: 0,\n        }\n    }\n\n    componentDidMount() {\n        // update every second\n        this.interval = setInterval(() => {\n            const date = this.calculateCountdown(this.props.date);\n            date ? this.setState(date) : this.stop();\n        }, 1000);\n    }\n\n    componentWillUnmount() {\n        this.stop();\n    }\n\n    calculateCountdown(endDate) {\n        let diff = (Date.parse(new Date(endDate)) - Date.parse(new Date())) / 1000;\n\n        // clear countdown when date is reached\n        if (diff <= 0) return false;\n\n        const timeLeft = {\n            years: 0,\n            days: 0,\n            hours: 0,\n            min: 0,\n            sec: 0\n        };\n\n        // calculate time difference between now and expected date\n        if (diff >= (365.25 * 86400)) { // 365.25 * 24 * 60 * 60\n            timeLeft.years = Math.floor(diff / (365.25 * 86400));\n            diff -= timeLeft.years * 365.25 * 86400;\n        }\n        if (diff >= 86400) { // 24 * 60 * 60\n            timeLeft.days = Math.floor(diff / 86400);\n            diff -= timeLeft.days * 86400;\n        }\n        if (diff >= 3600) { // 60 * 60\n            timeLeft.hours = Math.floor(diff / 3600);\n            diff -= timeLeft.hours * 3600;\n        }\n        if (diff >= 60) {\n            timeLeft.min = Math.floor(diff / 60);\n            diff -= timeLeft.min * 60;\n        }\n        timeLeft.sec = diff;\n\n        return timeLeft;\n    }\n\n    stop() {\n        clearInterval(this.interval);\n    }\n\n    addLeadingZeros(value) {\n        value = String(value);\n        while (value.length < 2) {\n            value = '0' + value;\n        }\n        return value;\n    }\n\n    render() {\n        const countDown = this.state;\n\n        return (\n\n            <div className={'Countdown'}>\n                <p style={{textAlign: \"center\"}}> pressing start in </p>\n        <span className={\"Countdown-col\"}>\n          <span className={\"Countdown-col-element\"}>\n\n              <strong className={'timeText'}>{this.addLeadingZeros(countDown.days)}</strong>\n              <span>{countDown.days === 1 ? 'Day' : 'Days'}</span>\n          </span>\n        </span>\n\n                <span className={\"Countdown-col\"}>\n          <span className={\"Countdown-col-element\"}>\n            <strong>{this.addLeadingZeros(countDown.hours)}</strong>\n            <span>Hours</span>\n          </span>\n        </span>\n\n\n                <span className=\"Countdown-col\">\n          <span className={\"Countdown-col-element\"}>\n            <strong>{this.addLeadingZeros(countDown.min)}</strong>\n            <span>Min</span>\n          </span>\n        </span>\n\n                <span className={\"Countdown-col\"}>\n          <span className=\"Countdown-col-element\">\n            <strong>{this.addLeadingZeros(countDown.sec)}</strong>\n            <span>Sec</span>\n          </span>\n        </span>\n            </div>\n        );\n    }\n}\n\nTimer.propTypes = {\n    date: PropTypes.string.isRequired\n};\n\nTimer.defaultProps = {\n    date: new Date()\n};\n\nexport default Timer;\n"],"sourceRoot":""}