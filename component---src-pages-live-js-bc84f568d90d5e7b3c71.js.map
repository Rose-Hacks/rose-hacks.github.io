{"version":3,"sources":["webpack:///./src/pages/live.js","webpack:///./src/components/timer.js","webpack:///./src/gifs/liveAnimation.gif"],"names":["Live","title","className","src","Animation","date","id","Timer","props","state","days","hours","min","sec","componentDidMount","this","interval","setInterval","calculateCountdown","setState","stop","componentWillUnmount","endDate","diff","Date","parse","timeLeft","years","Math","floor","clearInterval","addLeadingZeros","value","String","length","render","countDown","style","textAlign","Component","defaultProps","module","exports"],"mappings":"0FAAA,gGA2CeA,UAjCF,kBACX,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,mBACT,yBAAKC,UAAW,eACZ,yBAAKC,IAAKC,IAAWF,UAAW,kBAChC,yBAAKA,UAAW,eACtB,kBAAC,IAAD,CAAOG,KAAI,yBAEL,6BAASH,UAAW,QAASI,GAAI,UAC7B,2CACA,uGAIR,6BAASJ,UAAW,QAASI,GAAI,UAC7B,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,iC,gEC/BJC,E,oBACF,WAAYC,GAAQ,IAAD,SACf,cAAMA,IAAN,MAEKC,MAAQ,CACTC,KAAM,EACNC,MAAO,EACPC,IAAK,EACLC,IAAK,GAPM,E,kHAWnBC,kBAAA,WAAqB,IAAD,OAEhBC,KAAKC,SAAWC,aAAY,WACxB,IAAMZ,EAAO,EAAKa,mBAAmB,EAAKV,MAAMH,MAChDA,EAAO,EAAKc,SAASd,GAAQ,EAAKe,SACnC,M,EAGPC,qBAAA,WACIN,KAAKK,Q,EAGTF,mBAAA,SAAmBI,GACf,IAAIC,GAAQC,KAAKC,MAAM,IAAID,KAAKF,IAAYE,KAAKC,MAAM,IAAID,OAAW,IAGtE,GAAID,GAAQ,EAAG,OAAO,EAEtB,IAAMG,EAAW,CACbC,MAAO,EACPjB,KAAM,EACNC,MAAO,EACPC,IAAK,EACLC,IAAK,GAsBT,OAlBIU,GAAS,WACTG,EAASC,MAAQC,KAAKC,MAAMN,EAAI,UAChCA,GAAyB,OAAjBG,EAASC,MAAiB,OAElCJ,GAAQ,QACRG,EAAShB,KAAOkB,KAAKC,MAAMN,EAAO,OAClCA,GAAwB,MAAhBG,EAAShB,MAEjBa,GAAQ,OACRG,EAASf,MAAQiB,KAAKC,MAAMN,EAAO,MACnCA,GAAyB,KAAjBG,EAASf,OAEjBY,GAAQ,KACRG,EAASd,IAAMgB,KAAKC,MAAMN,EAAO,IACjCA,GAAuB,GAAfG,EAASd,KAErBc,EAASb,IAAMU,EAERG,G,EAGXN,KAAA,WACIU,cAAcf,KAAKC,W,EAGvBe,gBAAA,SAAgBC,GAEZ,IADAA,EAAQC,OAAOD,GACRA,EAAME,OAAS,GAClBF,EAAQ,IAAMA,EAElB,OAAOA,G,EAGXG,OAAA,WACI,IAAMC,EAAYrB,KAAKN,MAEvB,OAEI,yBAAKP,UAAW,aACZ,uBAAGmC,MAAO,CAACC,UAAW,WAAtB,uBACR,0BAAMpC,UAAW,iBACf,0BAAMA,UAAW,yBAEb,4BAAQA,UAAW,YAAaa,KAAKgB,gBAAgBK,EAAU1B,OAC/D,8BAA0B,IAAnB0B,EAAU1B,KAAa,MAAQ,UAIpC,0BAAMR,UAAW,iBACvB,0BAAMA,UAAW,yBACf,gCAASa,KAAKgB,gBAAgBK,EAAUzB,QACxC,yCAKI,0BAAMT,UAAU,iBACtB,0BAAMA,UAAW,yBACf,gCAASa,KAAKgB,gBAAgBK,EAAUxB,MACxC,uCAII,0BAAMV,UAAW,iBACvB,0BAAMA,UAAU,yBACd,gCAASa,KAAKgB,gBAAgBK,EAAUvB,MACxC,yC,GAzGQ0B,aAqHpBhC,EAAMiC,aAAe,CACjBnC,KAAM,IAAImB,MAGCjB,O,oBC9HfkC,EAAOC,QAAU,IAA0B","file":"component---src-pages-live-js-bc84f568d90d5e7b3c71.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport NavBar from \"../components/navbar\"\nimport SEO from \"../components/seo\"\nimport Timer from '../components/timer'\nimport Layout from \"../components/layout\";\nimport Animation from '../gifs/liveAnimation.gif'\nimport '../styles/live.css'\n\nconst Live = () => (\n  <NavBar>\n    <SEO title=\"Rose Hack 2020\" />\n      <div className={'liveOverlay'}>\n          <img src={Animation} className={'liveAnimation'} />\n          <div className={'timerFormat'}>\n    <Timer date={`2020-01-18T12:00:00`}/>\n          </div>\n          <section className={'title'} id={'footer'}>\n              <h1>Need Help? </h1>\n              <p> Check out our live site or reach out to an organizer/mentor on Slack!</p>\n          </section>\n\n      </div>\n      <section className={'title'} id={'footer'}>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n      </section>\n\n\n  </NavBar>\n)\n\nexport default Live\n","\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types'\n\nimport '../styles/timer.css'\nclass Timer extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            days: 0,\n            hours: 0,\n            min: 0,\n            sec: 0,\n        }\n    }\n\n    componentDidMount() {\n        // update every second\n        this.interval = setInterval(() => {\n            const date = this.calculateCountdown(this.props.date);\n            date ? this.setState(date) : this.stop();\n        }, 1000);\n    }\n\n    componentWillUnmount() {\n        this.stop();\n    }\n\n    calculateCountdown(endDate) {\n        let diff = (Date.parse(new Date(endDate)) - Date.parse(new Date())) / 1000;\n\n        // clear countdown when date is reached\n        if (diff <= 0) return false;\n\n        const timeLeft = {\n            years: 0,\n            days: 0,\n            hours: 0,\n            min: 0,\n            sec: 0\n        };\n\n        // calculate time difference between now and expected date\n        if (diff >= (365.25 * 86400)) { // 365.25 * 24 * 60 * 60\n            timeLeft.years = Math.floor(diff / (365.25 * 86400));\n            diff -= timeLeft.years * 365.25 * 86400;\n        }\n        if (diff >= 86400) { // 24 * 60 * 60\n            timeLeft.days = Math.floor(diff / 86400);\n            diff -= timeLeft.days * 86400;\n        }\n        if (diff >= 3600) { // 60 * 60\n            timeLeft.hours = Math.floor(diff / 3600);\n            diff -= timeLeft.hours * 3600;\n        }\n        if (diff >= 60) {\n            timeLeft.min = Math.floor(diff / 60);\n            diff -= timeLeft.min * 60;\n        }\n        timeLeft.sec = diff;\n\n        return timeLeft;\n    }\n\n    stop() {\n        clearInterval(this.interval);\n    }\n\n    addLeadingZeros(value) {\n        value = String(value);\n        while (value.length < 2) {\n            value = '0' + value;\n        }\n        return value;\n    }\n\n    render() {\n        const countDown = this.state;\n\n        return (\n\n            <div className={'Countdown'}>\n                <p style={{textAlign: \"center\"}}> pressing start in </p>\n        <span className={\"Countdown-col\"}>\n          <span className={\"Countdown-col-element\"}>\n\n              <strong className={'timeText'}>{this.addLeadingZeros(countDown.days)}</strong>\n              <span>{countDown.days === 1 ? 'Day' : 'Days'}</span>\n          </span>\n        </span>\n\n                <span className={\"Countdown-col\"}>\n          <span className={\"Countdown-col-element\"}>\n            <strong>{this.addLeadingZeros(countDown.hours)}</strong>\n            <span>Hours</span>\n          </span>\n        </span>\n\n\n                <span className=\"Countdown-col\">\n          <span className={\"Countdown-col-element\"}>\n            <strong>{this.addLeadingZeros(countDown.min)}</strong>\n            <span>Min</span>\n          </span>\n        </span>\n\n                <span className={\"Countdown-col\"}>\n          <span className=\"Countdown-col-element\">\n            <strong>{this.addLeadingZeros(countDown.sec)}</strong>\n            <span>Sec</span>\n          </span>\n        </span>\n            </div>\n        );\n    }\n}\n\nTimer.propTypes = {\n    date: PropTypes.string.isRequired\n};\n\nTimer.defaultProps = {\n    date: new Date()\n};\n\nexport default Timer;\n","module.exports = __webpack_public_path__ + \"static/liveAnimation-6451a1f6fe780c5f0a3e04ed0ab0f001.gif\";"],"sourceRoot":""}